# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Vamsi Duvvuri

# This file is used to register the agents in the system.
# The agents are registered by their name and the implementation class.
# The implementation class is used to create the agent when it is requested.
# The agents are registered in the following format:
# <agent_name>:
#   impl: <agent_implementation_class>
# The agent_name is used to identify the agent in the system.
# The implementation class is used to create the agent when it is requested.
# The implementation class should be in the format <module>.<class_name>
# The module should be the name of the module where the class is defined.

# agents/registry.yaml
func_decomp:
  impl: backend.agents.openai.func_decomp_agent.FuncArchAgent
# … your existing entries …

decomp:
  impl: backend.agents.openai.func_decomp_agent.FuncArchAgent

micro_decomp:
  impl: backend.agents.openai.micro_decomp_agent.MicroDecompAgent

intake:
  impl: backend.agents.openai.intake_agent.IntakeAgent

strategy:
  impl: backend.agents.openai.strategy_agent.StrategyAgent

execute:
  impl: backend.agents.openai.execution_agent.ExecutionAgent

report:
  impl: backend.agents.openai.reporting_agent.ReportingAgent

director:
  impl: backend.agents.openai.director_agent.DirectorAgent

codegen:
  impl: backend.agents.openai.codegen_agent.CodeGenAgent

apicaller:
  impl: backend.agents.openai.apicaller_agent.APICallerAgent

# In the future you can add:
nvidia_micro_decomp:
  impl: backend.agents.nvidia.MicroDecompAgentIQ
google_code_adapt:
  impl: backend.agents.google.A2AAdapter
anthropic_code_adapt:
  impl: backend.agents.anthropic.MCPAdapter
